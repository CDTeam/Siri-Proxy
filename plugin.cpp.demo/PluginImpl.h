// Copyright (c) 2011,cd-team.org.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
#pragma once
#include <string>
#include <vector>
using namespace std;
struct PluginInfo;
struct PlistPackageArgs;
struct CommandCallResult;

typedef bool (__stdcall*PluginFuncInitialize)();
typedef void (__stdcall*PluginFuncUnInitialize)();
typedef void (__stdcall*FuncPluginInfoFree)(PluginInfo*);
typedef CommandCallResult* (__stdcall*PluginFuncCommandCall)(PlistPackageArgs* args);

struct PlistPackageArgs 
{
	char aceId[37];
	char refId[37];
	char* sendText;
	char* responseText;
};


typedef void (__stdcall*FuncFreeCommandCallResult)(CommandCallResult*);

typedef enum ResultType
{
	RESULT_TEXT,
	RESULT_PLIST_XML
};

struct CommandCallResult
{
	ResultType type;

	//a c-style string,indicate the result of process command
	char* result_text;

	//the function pointer to free the CommadnCallResult object
	FuncFreeCommandCallResult FreeCommandCallResult;
};

struct PluginInfo
{
	//a guid string,with register format,like this:'D10C80A1-6160-455e-96C2-1D40029BFF95'
	char PluginId[37];

	//a c-style string,indicate the name of the Plugin
	char* PluginName;

	char* CommandText;

	char* CommandMatchPattern;

	PluginFuncCommandCall  OnCommandCall;
	PluginFuncInitialize   InitPluginModule;
	PluginFuncUnInitialize UnInitPluginModule;
	FuncPluginInfoFree	   PluginInfoFree;
};
typedef PluginInfo* (*FnPluginInitMain)();
