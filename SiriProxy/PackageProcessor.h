// Copyright (c) 2011,cd-team.org.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
#pragma once
#include "StdAfx.h"
static const char header_0x020000[]={0x02,0x00,0x00};
static const char header_0x030000[]={0x03,0x00,0x00};
static const char header_0x040000[]={0x04,0x00,0x00};
static const size_t SIZE_HEAD_BLOCK=3;
static const size_t SIZE_SHORT=2;

struct IPackageEventHandler
{
	virtual void OnPingPackage(const char* pingData,const size_t& dataLen,bool bPush)=0;
	virtual void OnPlistPackage(const char* plistData,const size_t& dataLen,bool bPush)=0;
	virtual void OnPackageParseError(const string& msg,bool bPush)=0;
};

class PackageProcessor
{
	IPackageEventHandler* pEventNotify;
	enum PROCESS_STATE
	{
		STATE_NONE,//任意状态
		STATE_0x02_GET_NUM,
		STATE_0x020000,//plist头
		STATE_0x03_0x04,//ping包,pong包
	};
	PROCESS_STATE		state;
	size_t				nextLen_state_none;
	vector<char>		bin_state_none;
	size_t				nextLen_plist;
	vector<char>		plistbin;
	size_t				nextLen_plist_t;
	short				n_plist_next_size;
	vector<char>		plistbin_t;
	size_t				nextLen_state_0x03_0x04;
	vector<char>		bin_state_0x03_0x04;
	bool bPush;
public:
	PackageProcessor(IPackageEventHandler* pNotify,bool push=true);
	bool ProcessBuffer(const char* data,size_t dataSize,size_t offset);
};
