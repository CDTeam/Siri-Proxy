// Copyright (c) 2011,cd-team.org.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
#include "libplist.h"
#define WIN32_LEAN_AND_MEAN
#include <Windows.h>

fn_plist_free plist_free=0x00;
fn_plist_from_bin plist_from_bin=0x00;
fn_plist_to_bin plist_to_bin=0x00;
fn_plist_to_xml plist_to_xml=0x00;
fn_plist_get_node_type plist_get_node_type=0x00;
fn_plist_dict_new_iter plist_dict_new_iter=0x00;
fn_plist_dict_next_item plist_dict_next_item=0x00;
fn_plist_get_string_val plist_get_string_val=0x00;
fn_plist_get_data_val plist_get_data_val=0x00;
fn_plist_set_string_val plist_set_string_val=0x00;
fn_plist_set_data_val plist_set_data_val=0x00;
fn_plist_from_xml plist_from_xml=0x00;

void init_plist_runtime()
{
	HMODULE hMod= LoadLibraryA("libplist.dll");
	plist_free=(fn_plist_free)GetProcAddress(hMod,"plist_free");
	plist_from_bin=(fn_plist_from_bin)GetProcAddress(hMod,"plist_from_bin");
	plist_to_bin=(fn_plist_to_bin)GetProcAddress(hMod,"plist_to_bin");
	plist_to_xml=(fn_plist_to_xml)GetProcAddress(hMod,"plist_to_xml");
	plist_from_xml=(fn_plist_from_xml)GetProcAddress(hMod,"plist_from_xml");
	plist_get_node_type=(fn_plist_get_node_type)GetProcAddress(hMod,"plist_get_node_type");
	plist_dict_new_iter=(fn_plist_dict_new_iter)GetProcAddress(hMod,"plist_dict_new_iter");
	plist_dict_next_item=(fn_plist_dict_next_item)GetProcAddress(hMod,"plist_dict_next_item");
	plist_get_string_val=(fn_plist_get_string_val)GetProcAddress(hMod,"plist_get_string_val");
	plist_get_data_val=(fn_plist_get_data_val)GetProcAddress(hMod,"plist_get_data_val");
	plist_set_string_val=(fn_plist_set_string_val)GetProcAddress(hMod,"plist_set_string_val");
	plist_set_data_val=(fn_plist_set_data_val)GetProcAddress(hMod,"plist_set_data_val");
}